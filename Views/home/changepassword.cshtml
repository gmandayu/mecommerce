@{
    // View
    View = this;

    // Check action result
    if (changePassword.ActionResult is EmptyResult) { // Terminate page
        return;
    }

    // Layout
    if (!changePassword.UseLayout) // UseLayout = false // DN
        Layout = "";
    else
        Layout = "_Layout";

    // Local variables (Temp data)
    #pragma warning disable 168
    string? sqlWrk, filterWrk, whereWrk, curVal, dispVal;
    List<Dictionary<string, object>>? rswrk;
    string[]? arWrk;
    List<object?>? listWrk;
    object? guidWrk;
    Func<string>? lookupFilter;
    #pragma warning restore 168
}
<script>
loadjs.ready("head", function() {
    // Write your client script here, no need to add script tags.
});
</script>
@changePassword.ShowPageHeader()
<div class="ew-change-pwd-box">
<div class="card">
<div class="card-body">
@changePassword.ShowMessages()
<script>
var fchange_password;
loadjs.ready(["wrapper", "head"], function() {
    let $ = jQuery;
    ew.PAGE_ID ||= "change_password";
    window.currentPageID ||= "change_password";
    let form = new ew.FormBuilder()
        .setId("fchange_password")
        // Add fields
        .addFields([
    @if (!IsPasswordReset()) {
            <text>["opwd", ew.Validators.required(ew.language.phrase("OldPassword")), @(changePassword.OldPassword.IsInvalid ? "true" : "false")],</text>
    }

            ["npwd", [ew.Validators.required(ew.language.phrase("NewPassword")), ew.Validators.password(@(changePassword.NewPassword.Raw ? "true" : "false")), ew.Validators.passwordStrength], @(changePassword.NewPassword.IsInvalid ? "true" : "false")],
            ["cpwd", [ew.Validators.required(ew.language.phrase("ConfirmPassword")), ew.Validators.mismatchPassword], @(changePassword.ConfirmPassword.IsInvalid ? "true" : "false")]
        ])

        // Validate
        .setValidate(
             async function() {
                if (!this.validateRequired)
                    return true; // Ignore validation
                let $ = jQuery,
                    fobj = this.getForm();

                // Validate fields
                if (!this.validateFields())
                    return false;

                // Call Form_CustomValidate event
                if (!(await this.customValidate?.(fobj) ?? true)) {
                    this.focus();
                    return false;
                }
                return true;
            }
        )

        // Form_CustomValidate
        .setCustomValidate(
            function(fobj) { // DO NOT CHANGE THIS LINE!
            	    // Your custom validation code here, return false if invalid.
            	    return true;
            	}
        )

        // Use JavaScript validation
        .setValidateRequired(ew.CLIENT_VALIDATE)
        .build();
    window[form.id] = form;
    window.currentForm ||= form;
    loadjs.done(form.id);
});
</script>
<form name="fchange_password" id="fchange_password" class="ew-form ew-change-pwd-form" action="@AppPath(CurrentPageName())" method="post" novalidate autocomplete="off">
    @if (CurrentPage.CheckToken) {
        <input type="hidden" name="@Config.TokenNameKey" value="@Config.TokenName"><!-- CSRF token name -->
        @Html.AntiForgeryToken()
    }
    <input type="hidden" name="modal" value="@(ConvertToInt(changePassword.IsModal))">
    <p class="login-box-msg">@Html.Raw(Language.Phrase("ChangePasswordMessage"))</p>
@if (!IsPasswordReset()) {
    <div class="row">
        <div class="input-group">
            <input type="password" name="@Html.Raw(changePassword.OldPassword.FieldVar)" id="@Html.Raw(changePassword.OldPassword.FieldVar)" autocomplete="current-password" placeholder="@Html.Raw(Language.Phrase("OldPassword")) " @Html.Raw(changePassword.OldPassword.EditAttributes)>
            <button type="button" class="btn btn-default ew-toggle-password rounded-end" data-ew-action="password"><i class="fa-solid fa-eye"></i></button>
        </div>
        <div class="invalid-feedback">@Html.Raw(changePassword.OldPassword.GetErrorMessage())</div>
    </div>
}
    <div class="row gx-0">
        <div class="input-group px-0">
            <input type="password" name="@Html.Raw(changePassword.NewPassword.FieldVar)" id="@Html.Raw(changePassword.NewPassword.FieldVar)" autocomplete="new-password" placeholder="@Html.Raw(Language.Phrase("NewPassword"))" data-password-strength="pst_npwd" @Html.Raw(changePassword.NewPassword.EditAttributes)>
            <button type="button" class="btn btn-default ew-toggle-password" data-ew-action="password"><i class="fa-solid fa-eye"></i></button>
            <button type="button" class="btn btn-default ew-password-generator rounded-end" title="@Html.Raw(Language.Phrase("GeneratePassword", true))" data-password-field="@Html.Raw(changePassword.NewPassword.FieldVar)" data-password-confirm="@Html.Raw(changePassword.ConfirmPassword.FieldVar)" data-password-strength="pst_npwd">@Html.Raw(Language.Phrase("GeneratePassword"))</button>
        </div>
        <div class="invalid-feedback">@Html.Raw(changePassword.NewPassword.GetErrorMessage())</div>
        <div class="progress ew-password-strength-bar form-text mt-1 d-none" id="pst_@Html.Raw(changePassword.NewPassword.FieldVar)">
            <div class="progress-bar" role="progressbar"></div>
        </div>
    </div>
    <div class="row gx-0">
        <div class="input-group px-0">
            <input type="password" name="@Html.Raw(changePassword.ConfirmPassword.FieldVar)" id="@Html.Raw(changePassword.ConfirmPassword.FieldVar)" autocomplete="new-password" placeholder="@Html.Raw(Language.Phrase("ConfirmPassword"))" @Html.Raw(changePassword.ConfirmPassword.EditAttributes)>
            <button type="button" class="btn btn-default ew-toggle-password rounded-end" data-ew-action="password"><i class="fa-solid fa-eye"></i></button>
        </div>
        <div class="invalid-feedback">@Html.Raw(changePassword.ConfirmPassword.GetErrorMessage())</div>
    </div>
<div class="d-grid mb-3">
    <button class="btn btn-primary ew-btn disabled enable-on-init" name="btn-submit" id="btn-submit" type="submit" formaction="@AppPath(CurrentPageName())">@Html.Raw(Language.Phrase("ChangePasswordBtn"))</button>
</div>
</form>
</div>
</div>
</div>
@changePassword.ShowPageFooter()
@Html.Raw(GetDebugMessage())
@ElapsedTime()
<script>
loadjs.ready("load", function() {
    // Write your startup script here
    // document.write("page loaded");
});
</script>
