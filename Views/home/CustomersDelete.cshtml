@{
    // View
    View = this;

    // Check action result
    if (customersDelete.ActionResult is EmptyResult) { // Terminate page
        return;
    }

    // Layout
    if (!customersDelete.UseLayout) // UseLayout = false // DN
        Layout = "";
    else
        Layout = "_Layout";

    // Local variables (Temp data)
    #pragma warning disable 168
    string? sqlWrk, filterWrk, whereWrk, curVal, dispVal;
    List<Dictionary<string, object>>? rswrk;
    string[]? arWrk;
    List<object?>? listWrk;
    object? guidWrk;
    Func<string>? lookupFilter;
    #pragma warning restore 168
}
<script>
var currentTable = @Html.Raw(ConvertToJson(customersDelete.ToClientVar()));
ew.deepAssign(ew.vars, { tables: { Customers: currentTable } });
var currentPageID = ew.PAGE_ID = "delete";
var currentForm;
var fCustomersdelete;
loadjs.ready(["wrapper", "head"], function () {
    let $ = jQuery;
    let fields = currentTable.fields;

    // Form object
    let form = new ew.FormBuilder()
        .setId("fCustomersdelete")
        .setPageId("delete")
        .build();
    window[form.id] = form;
    currentForm = form;
    loadjs.done(form.id);
});
</script>
<script>
loadjs.ready("head", function() {
    // Write your client script here, no need to add script tags.
});
</script>
@customersDelete.ShowPageHeader()
@customersDelete.ShowMessages()
<form name="fCustomersdelete" id="fCustomersdelete" class="ew-form ew-delete-form" action="@AppPath(CurrentPageName())" method="post" novalidate autocomplete="off">
@if (CurrentPage.CheckToken) {
    <input type="hidden" name="@Config.TokenNameKey" value="@Config.TokenName"><!-- CSRF token name -->
    @Html.AntiForgeryToken()
}
<input type="hidden" name="action" id="action" value="delete">
@foreach (string key in customersDelete.RecordKeys) {
<input type="hidden" name="key_m[]" value="@key">
}
<div class="card ew-card ew-grid @(customersDelete.TableGridClass)">
<div class="card-body ew-grid-middle-panel @(customersDelete.TableContainerClass)" style="@(customersDelete.TableContainerStyle)">
<table class="@(customersDelete.TableClass)">
    <thead>
    <tr class="ew-table-header">
@if (customersDelete.FirstName.Visible) { // customersDelete.FirstName.Visible (begin)
        <th class="@Html.Raw(customersDelete.FirstName.HeaderCellClass)"><span id="elh_Customers_FirstName" class="Customers_FirstName">@Html.Raw(customersDelete.FirstName.Caption)</span></th>
} @* customersDelete.FirstName.Visible (end) *@
@if (customersDelete.MiddleName.Visible) { // customersDelete.MiddleName.Visible (begin)
        <th class="@Html.Raw(customersDelete.MiddleName.HeaderCellClass)"><span id="elh_Customers_MiddleName" class="Customers_MiddleName">@Html.Raw(customersDelete.MiddleName.Caption)</span></th>
} @* customersDelete.MiddleName.Visible (end) *@
@if (customersDelete.LastName.Visible) { // customersDelete.LastName.Visible (begin)
        <th class="@Html.Raw(customersDelete.LastName.HeaderCellClass)"><span id="elh_Customers_LastName" class="Customers_LastName">@Html.Raw(customersDelete.LastName.Caption)</span></th>
} @* customersDelete.LastName.Visible (end) *@
@if (customersDelete.Gender.Visible) { // customersDelete.Gender.Visible (begin)
        <th class="@Html.Raw(customersDelete.Gender.HeaderCellClass)"><span id="elh_Customers_Gender" class="Customers_Gender">@Html.Raw(customersDelete.Gender.Caption)</span></th>
} @* customersDelete.Gender.Visible (end) *@
@if (customersDelete.PlaceOfBirth.Visible) { // customersDelete.PlaceOfBirth.Visible (begin)
        <th class="@Html.Raw(customersDelete.PlaceOfBirth.HeaderCellClass)"><span id="elh_Customers_PlaceOfBirth" class="Customers_PlaceOfBirth">@Html.Raw(customersDelete.PlaceOfBirth.Caption)</span></th>
} @* customersDelete.PlaceOfBirth.Visible (end) *@
@if (customersDelete.DateOfBirth.Visible) { // customersDelete.DateOfBirth.Visible (begin)
        <th class="@Html.Raw(customersDelete.DateOfBirth.HeaderCellClass)"><span id="elh_Customers_DateOfBirth" class="Customers_DateOfBirth">@Html.Raw(customersDelete.DateOfBirth.Caption)</span></th>
} @* customersDelete.DateOfBirth.Visible (end) *@
@if (customersDelete.PrimaryAddressCity.Visible) { // customersDelete.PrimaryAddressCity.Visible (begin)
        <th class="@Html.Raw(customersDelete.PrimaryAddressCity.HeaderCellClass)"><span id="elh_Customers_PrimaryAddressCity" class="Customers_PrimaryAddressCity">@Html.Raw(customersDelete.PrimaryAddressCity.Caption)</span></th>
} @* customersDelete.PrimaryAddressCity.Visible (end) *@
@if (customersDelete.PrimaryAddressPostCode.Visible) { // customersDelete.PrimaryAddressPostCode.Visible (begin)
        <th class="@Html.Raw(customersDelete.PrimaryAddressPostCode.HeaderCellClass)"><span id="elh_Customers_PrimaryAddressPostCode" class="Customers_PrimaryAddressPostCode">@Html.Raw(customersDelete.PrimaryAddressPostCode.Caption)</span></th>
} @* customersDelete.PrimaryAddressPostCode.Visible (end) *@
@if (customersDelete.PrimaryAddressCountryID.Visible) { // customersDelete.PrimaryAddressCountryID.Visible (begin)
        <th class="@Html.Raw(customersDelete.PrimaryAddressCountryID.HeaderCellClass)"><span id="elh_Customers_PrimaryAddressCountryID" class="Customers_PrimaryAddressCountryID">@Html.Raw(customersDelete.PrimaryAddressCountryID.Caption)</span></th>
} @* customersDelete.PrimaryAddressCountryID.Visible (end) *@
@if (customersDelete.AlternativeAddressCity.Visible) { // customersDelete.AlternativeAddressCity.Visible (begin)
        <th class="@Html.Raw(customersDelete.AlternativeAddressCity.HeaderCellClass)"><span id="elh_Customers_AlternativeAddressCity" class="Customers_AlternativeAddressCity">@Html.Raw(customersDelete.AlternativeAddressCity.Caption)</span></th>
} @* customersDelete.AlternativeAddressCity.Visible (end) *@
@if (customersDelete.AlternativeAddressPostCode.Visible) { // customersDelete.AlternativeAddressPostCode.Visible (begin)
        <th class="@Html.Raw(customersDelete.AlternativeAddressPostCode.HeaderCellClass)"><span id="elh_Customers_AlternativeAddressPostCode" class="Customers_AlternativeAddressPostCode">@Html.Raw(customersDelete.AlternativeAddressPostCode.Caption)</span></th>
} @* customersDelete.AlternativeAddressPostCode.Visible (end) *@
@if (customersDelete.AlternativeAddressCountryID.Visible) { // customersDelete.AlternativeAddressCountryID.Visible (begin)
        <th class="@Html.Raw(customersDelete.AlternativeAddressCountryID.HeaderCellClass)"><span id="elh_Customers_AlternativeAddressCountryID" class="Customers_AlternativeAddressCountryID">@Html.Raw(customersDelete.AlternativeAddressCountryID.Caption)</span></th>
} @* customersDelete.AlternativeAddressCountryID.Visible (end) *@
@if (customersDelete.MobileNumber.Visible) { // customersDelete.MobileNumber.Visible (begin)
        <th class="@Html.Raw(customersDelete.MobileNumber.HeaderCellClass)"><span id="elh_Customers_MobileNumber" class="Customers_MobileNumber">@Html.Raw(customersDelete.MobileNumber.Caption)</span></th>
} @* customersDelete.MobileNumber.Visible (end) *@
@if (customersDelete.UserID.Visible) { // customersDelete.UserID.Visible (begin)
        <th class="@Html.Raw(customersDelete.UserID.HeaderCellClass)"><span id="elh_Customers_UserID" class="Customers_UserID">@Html.Raw(customersDelete.UserID.Caption)</span></th>
} @* customersDelete.UserID.Visible (end) *@
@if (customersDelete.Status.Visible) { // customersDelete.Status.Visible (begin)
        <th class="@Html.Raw(customersDelete.Status.HeaderCellClass)"><span id="elh_Customers_Status" class="Customers_Status">@Html.Raw(customersDelete.Status.Caption)</span></th>
} @* customersDelete.Status.Visible (end) *@
@if (customersDelete.CreatedBy.Visible) { // customersDelete.CreatedBy.Visible (begin)
        <th class="@Html.Raw(customersDelete.CreatedBy.HeaderCellClass)"><span id="elh_Customers_CreatedBy" class="Customers_CreatedBy">@Html.Raw(customersDelete.CreatedBy.Caption)</span></th>
} @* customersDelete.CreatedBy.Visible (end) *@
@if (customersDelete.CreatedDateTime.Visible) { // customersDelete.CreatedDateTime.Visible (begin)
        <th class="@Html.Raw(customersDelete.CreatedDateTime.HeaderCellClass)"><span id="elh_Customers_CreatedDateTime" class="Customers_CreatedDateTime">@Html.Raw(customersDelete.CreatedDateTime.Caption)</span></th>
} @* customersDelete.CreatedDateTime.Visible (end) *@
@if (customersDelete.UpdatedBy.Visible) { // customersDelete.UpdatedBy.Visible (begin)
        <th class="@Html.Raw(customersDelete.UpdatedBy.HeaderCellClass)"><span id="elh_Customers_UpdatedBy" class="Customers_UpdatedBy">@Html.Raw(customersDelete.UpdatedBy.Caption)</span></th>
} @* customersDelete.UpdatedBy.Visible (end) *@
@if (customersDelete.UpdatedDateTime.Visible) { // customersDelete.UpdatedDateTime.Visible (begin)
        <th class="@Html.Raw(customersDelete.UpdatedDateTime.HeaderCellClass)"><span id="elh_Customers_UpdatedDateTime" class="Customers_UpdatedDateTime">@Html.Raw(customersDelete.UpdatedDateTime.Caption)</span></th>
} @* customersDelete.UpdatedDateTime.Visible (end) *@
    </tr>
    </thead>
    <tbody>
@{ customersDelete.RecordCount = 0; }
@while (customersDelete.Recordset != null && await customersDelete.Recordset.ReadAsync()) { // DN
    customersDelete.RecordCount++;
    customersDelete.RowCount++;

    // Set row properties
    customersDelete.ResetAttributes();
    customersDelete.RowType = RowType.View; // View

    // Get the field contents
    await customersDelete.LoadRowValues(customersDelete.Recordset);

    // Render row
    await customersDelete.RenderRow();
    <tr @Html.Raw(customersDelete.RowAttributes)>
@if (customersDelete.FirstName.Visible) { // customersDelete.FirstName.Visible (begin)
        <td @Html.Raw(customersDelete.FirstName.CellAttributes)>
<span id="">
<span @Html.Raw(customersDelete.FirstName.ViewAttributes)>
@Html.Raw(customersDelete.FirstName.GetViewValue())</span>
</span></td>
} @* customersDelete.FirstName.Visible (end) *@
@if (customersDelete.MiddleName.Visible) { // customersDelete.MiddleName.Visible (begin)
        <td @Html.Raw(customersDelete.MiddleName.CellAttributes)>
<span id="">
<span @Html.Raw(customersDelete.MiddleName.ViewAttributes)>
@Html.Raw(customersDelete.MiddleName.GetViewValue())</span>
</span></td>
} @* customersDelete.MiddleName.Visible (end) *@
@if (customersDelete.LastName.Visible) { // customersDelete.LastName.Visible (begin)
        <td @Html.Raw(customersDelete.LastName.CellAttributes)>
<span id="">
<span @Html.Raw(customersDelete.LastName.ViewAttributes)>
@Html.Raw(customersDelete.LastName.GetViewValue())</span>
</span></td>
} @* customersDelete.LastName.Visible (end) *@
@if (customersDelete.Gender.Visible) { // customersDelete.Gender.Visible (begin)
        <td @Html.Raw(customersDelete.Gender.CellAttributes)>
<span id="">
<span @Html.Raw(customersDelete.Gender.ViewAttributes)>
@Html.Raw(customersDelete.Gender.GetViewValue())</span>
</span></td>
} @* customersDelete.Gender.Visible (end) *@
@if (customersDelete.PlaceOfBirth.Visible) { // customersDelete.PlaceOfBirth.Visible (begin)
        <td @Html.Raw(customersDelete.PlaceOfBirth.CellAttributes)>
<span id="">
<span @Html.Raw(customersDelete.PlaceOfBirth.ViewAttributes)>
@Html.Raw(customersDelete.PlaceOfBirth.GetViewValue())</span>
</span></td>
} @* customersDelete.PlaceOfBirth.Visible (end) *@
@if (customersDelete.DateOfBirth.Visible) { // customersDelete.DateOfBirth.Visible (begin)
        <td @Html.Raw(customersDelete.DateOfBirth.CellAttributes)>
<span id="">
<span @Html.Raw(customersDelete.DateOfBirth.ViewAttributes)>
@Html.Raw(customersDelete.DateOfBirth.GetViewValue())</span>
</span></td>
} @* customersDelete.DateOfBirth.Visible (end) *@
@if (customersDelete.PrimaryAddressCity.Visible) { // customersDelete.PrimaryAddressCity.Visible (begin)
        <td @Html.Raw(customersDelete.PrimaryAddressCity.CellAttributes)>
<span id="">
<span @Html.Raw(customersDelete.PrimaryAddressCity.ViewAttributes)>
@Html.Raw(customersDelete.PrimaryAddressCity.GetViewValue())</span>
</span></td>
} @* customersDelete.PrimaryAddressCity.Visible (end) *@
@if (customersDelete.PrimaryAddressPostCode.Visible) { // customersDelete.PrimaryAddressPostCode.Visible (begin)
        <td @Html.Raw(customersDelete.PrimaryAddressPostCode.CellAttributes)>
<span id="">
<span @Html.Raw(customersDelete.PrimaryAddressPostCode.ViewAttributes)>
@Html.Raw(customersDelete.PrimaryAddressPostCode.GetViewValue())</span>
</span></td>
} @* customersDelete.PrimaryAddressPostCode.Visible (end) *@
@if (customersDelete.PrimaryAddressCountryID.Visible) { // customersDelete.PrimaryAddressCountryID.Visible (begin)
        <td @Html.Raw(customersDelete.PrimaryAddressCountryID.CellAttributes)>
<span id="">
<span @Html.Raw(customersDelete.PrimaryAddressCountryID.ViewAttributes)>
@Html.Raw(customersDelete.PrimaryAddressCountryID.GetViewValue())</span>
</span></td>
} @* customersDelete.PrimaryAddressCountryID.Visible (end) *@
@if (customersDelete.AlternativeAddressCity.Visible) { // customersDelete.AlternativeAddressCity.Visible (begin)
        <td @Html.Raw(customersDelete.AlternativeAddressCity.CellAttributes)>
<span id="">
<span @Html.Raw(customersDelete.AlternativeAddressCity.ViewAttributes)>
@Html.Raw(customersDelete.AlternativeAddressCity.GetViewValue())</span>
</span></td>
} @* customersDelete.AlternativeAddressCity.Visible (end) *@
@if (customersDelete.AlternativeAddressPostCode.Visible) { // customersDelete.AlternativeAddressPostCode.Visible (begin)
        <td @Html.Raw(customersDelete.AlternativeAddressPostCode.CellAttributes)>
<span id="">
<span @Html.Raw(customersDelete.AlternativeAddressPostCode.ViewAttributes)>
@Html.Raw(customersDelete.AlternativeAddressPostCode.GetViewValue())</span>
</span></td>
} @* customersDelete.AlternativeAddressPostCode.Visible (end) *@
@if (customersDelete.AlternativeAddressCountryID.Visible) { // customersDelete.AlternativeAddressCountryID.Visible (begin)
        <td @Html.Raw(customersDelete.AlternativeAddressCountryID.CellAttributes)>
<span id="">
<span @Html.Raw(customersDelete.AlternativeAddressCountryID.ViewAttributes)>
@Html.Raw(customersDelete.AlternativeAddressCountryID.GetViewValue())</span>
</span></td>
} @* customersDelete.AlternativeAddressCountryID.Visible (end) *@
@if (customersDelete.MobileNumber.Visible) { // customersDelete.MobileNumber.Visible (begin)
        <td @Html.Raw(customersDelete.MobileNumber.CellAttributes)>
<span id="">
<span @Html.Raw(customersDelete.MobileNumber.ViewAttributes)>
@Html.Raw(customersDelete.MobileNumber.GetViewValue())</span>
</span></td>
} @* customersDelete.MobileNumber.Visible (end) *@
@if (customersDelete.UserID.Visible) { // customersDelete.UserID.Visible (begin)
        <td @Html.Raw(customersDelete.UserID.CellAttributes)>
<span id="">
<span @Html.Raw(customersDelete.UserID.ViewAttributes)>
@Html.Raw(customersDelete.UserID.GetViewValue())</span>
</span></td>
} @* customersDelete.UserID.Visible (end) *@
@if (customersDelete.Status.Visible) { // customersDelete.Status.Visible (begin)
        <td @Html.Raw(customersDelete.Status.CellAttributes)>
<span id="">
<span @Html.Raw(customersDelete.Status.ViewAttributes)>
@Html.Raw(customersDelete.Status.GetViewValue())</span>
</span></td>
} @* customersDelete.Status.Visible (end) *@
@if (customersDelete.CreatedBy.Visible) { // customersDelete.CreatedBy.Visible (begin)
        <td @Html.Raw(customersDelete.CreatedBy.CellAttributes)>
<span id="">
<span @Html.Raw(customersDelete.CreatedBy.ViewAttributes)>
@Html.Raw(customersDelete.CreatedBy.GetViewValue())</span>
</span></td>
} @* customersDelete.CreatedBy.Visible (end) *@
@if (customersDelete.CreatedDateTime.Visible) { // customersDelete.CreatedDateTime.Visible (begin)
        <td @Html.Raw(customersDelete.CreatedDateTime.CellAttributes)>
<span id="">
<span @Html.Raw(customersDelete.CreatedDateTime.ViewAttributes)>
@Html.Raw(customersDelete.CreatedDateTime.GetViewValue())</span>
</span></td>
} @* customersDelete.CreatedDateTime.Visible (end) *@
@if (customersDelete.UpdatedBy.Visible) { // customersDelete.UpdatedBy.Visible (begin)
        <td @Html.Raw(customersDelete.UpdatedBy.CellAttributes)>
<span id="">
<span @Html.Raw(customersDelete.UpdatedBy.ViewAttributes)>
@Html.Raw(customersDelete.UpdatedBy.GetViewValue())</span>
</span></td>
} @* customersDelete.UpdatedBy.Visible (end) *@
@if (customersDelete.UpdatedDateTime.Visible) { // customersDelete.UpdatedDateTime.Visible (begin)
        <td @Html.Raw(customersDelete.UpdatedDateTime.CellAttributes)>
<span id="">
<span @Html.Raw(customersDelete.UpdatedDateTime.ViewAttributes)>
@Html.Raw(customersDelete.UpdatedDateTime.GetViewValue())</span>
</span></td>
} @* customersDelete.UpdatedDateTime.Visible (end) *@
    </tr>
}
@{ customersDelete.CloseRecordset(); }
</tbody>
</table>
</div>
</div>
<div class="ew-buttons ew-desktop-buttons">
<button class="btn btn-primary ew-btn" name="btn-action" id="btn-action" type="submit">@Html.Raw(Language.Phrase("DeleteBtn"))</button>
<button class="btn btn-default ew-btn" name="btn-cancel" id="btn-cancel" type="button" data-href="@AppPath(customersDelete.ReturnUrl)">@Html.Raw(Language.Phrase("CancelBtn"))</button>
</div>
</form>
@customersDelete.ShowPageFooter()
@Html.Raw(GetDebugMessage())
@ElapsedTime()
<script>
loadjs.ready("load", function() {
    // Write your table-specific startup script here
    // document.write("page loaded");
});
</script>
