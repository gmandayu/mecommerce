@{
    // View
    View = this;

    // Check action result
    if (auditTrailEdit.ActionResult is EmptyResult) { // Terminate page
        return;
    }

    // Layout
    if (!auditTrailEdit.UseLayout) // UseLayout = false // DN
        Layout = "";
    else
        Layout = "_Layout";

    // Local variables (Temp data)
    #pragma warning disable 168
    string? sqlWrk, filterWrk, whereWrk, curVal, dispVal;
    List<Dictionary<string, object>>? rswrk;
    string[]? arWrk;
    List<object?>? listWrk;
    object? guidWrk;
    Func<string>? lookupFilter;
    #pragma warning restore 168
}
<script>
loadjs.ready("head", function() {
    // Write your client script here, no need to add script tags.
});
</script>
@auditTrailEdit.ShowPageHeader()
@auditTrailEdit.ShowMessages()
<main class="edit">
<form name="fAuditTrailedit" id="fAuditTrailedit" class="@(auditTrailEdit.FormClassName)" action="@AppPath(CurrentPageName())" method="post" novalidate autocomplete="off">
<script>
var currentTable = @Html.Raw(ConvertToJson(auditTrailEdit.ToClientVar()));
ew.deepAssign(ew.vars, { tables: { AuditTrail: currentTable } });
var currentPageID = ew.PAGE_ID = "edit";
var currentForm;
var fAuditTrailedit;
loadjs.ready(["wrapper", "head"], function () {
    let $ = jQuery;
    let fields = currentTable.fields;

    // Form object
    let form = new ew.FormBuilder()
        .setId("fAuditTrailedit")
        .setPageId("edit")

        // Add fields
        .setFields([

            ["Id", [fields.Id.visible && fields.Id.required ? ew.Validators.required(fields.Id.caption) : null], fields.Id.isInvalid],
            ["_DateTime", [fields._DateTime.visible && fields._DateTime.required ? ew.Validators.required(fields._DateTime.caption) : null, ew.Validators.datetime(fields._DateTime.clientFormatPattern)], fields._DateTime.isInvalid],
            ["Script", [fields.Script.visible && fields.Script.required ? ew.Validators.required(fields.Script.caption) : null], fields.Script.isInvalid],
            ["_User", [fields._User.visible && fields._User.required ? ew.Validators.required(fields._User.caption) : null], fields._User.isInvalid],
            ["_Action", [fields._Action.visible && fields._Action.required ? ew.Validators.required(fields._Action.caption) : null], fields._Action.isInvalid],
            ["_Table", [fields._Table.visible && fields._Table.required ? ew.Validators.required(fields._Table.caption) : null], fields._Table.isInvalid],
            ["_Field", [fields._Field.visible && fields._Field.required ? ew.Validators.required(fields._Field.caption) : null], fields._Field.isInvalid],
            ["KeyValue", [fields.KeyValue.visible && fields.KeyValue.required ? ew.Validators.required(fields.KeyValue.caption) : null], fields.KeyValue.isInvalid],
            ["OldValue", [fields.OldValue.visible && fields.OldValue.required ? ew.Validators.required(fields.OldValue.caption) : null], fields.OldValue.isInvalid],
            ["NewValue", [fields.NewValue.visible && fields.NewValue.required ? ew.Validators.required(fields.NewValue.caption) : null], fields.NewValue.isInvalid]
        ])

        // Form_CustomValidate
        .setCustomValidate(
            function(fobj) { // DO NOT CHANGE THIS LINE!
                    // Your custom validation code here, return false if invalid.
                    return true;
                }
        )

        // Use JavaScript validation or not
        .setValidateRequired(ew.CLIENT_VALIDATE)

        // Dynamic selection lists
        .setLists({
        })
        .build();
    window[form.id] = form;
    currentForm = form;
    loadjs.done(form.id);
});
</script>
@if (CurrentPage.CheckToken) {
    <input type="hidden" name="@Config.TokenNameKey" value="@Config.TokenName"><!-- CSRF token name -->
    @Html.AntiForgeryToken()
}
<input type="hidden" name="action" id="action" value="update">
<input type="hidden" name="modal" value="@ConvertToInt(auditTrailEdit.IsModal)">
@if (IsJsonResponse()) {
<input type="hidden" name="json" value="1">
}
<input type="hidden" name="@(auditTrailEdit.OldKeyName)" value="@Html.Raw(auditTrailEdit.OldKey)">
<div class="ew-edit-div"><!-- page* -->
@if (auditTrailEdit.Id.Visible) { // auditTrailEdit.Id.Visible (begin)
    <div id="r_Id" @Html.Raw(auditTrailEdit.Id.RowAttributes)>
        <label id="elh_AuditTrail_Id" class="@(auditTrailEdit.LeftColumnClass)">@Html.Raw(auditTrailEdit.Id.Caption)@Html.Raw(auditTrailEdit.Id.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(auditTrailEdit.RightColumnClass)"><div @Html.Raw(auditTrailEdit.Id.CellAttributes)>
<span id="el_AuditTrail_Id">
<span @Html.Raw(auditTrailEdit.Id.ViewAttributes)>
<input type="text" readonly class="form-control-plaintext" value="@Html.Raw(RemoveHtml(ConvertToString(auditTrailEdit.Id.EditValue)))"></span>
<input type="hidden" data-table="AuditTrail" data-field="x_Id" data-hidden="1" name="x_Id" id="x_Id" value="@Html.Raw(HtmlEncode(auditTrailEdit.Id.CurrentValue))">
</span>
</div></div>
    </div>
} @* auditTrailEdit.Id.Visible (end) *@
@if (auditTrailEdit._DateTime.Visible) { // auditTrailEdit._DateTime.Visible (begin)
    <div id="r__DateTime" @Html.Raw(auditTrailEdit._DateTime.RowAttributes)>
        <label id="elh_AuditTrail__DateTime" for="x__DateTime" class="@(auditTrailEdit.LeftColumnClass)">@Html.Raw(auditTrailEdit._DateTime.Caption)@Html.Raw(auditTrailEdit._DateTime.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(auditTrailEdit.RightColumnClass)"><div @Html.Raw(auditTrailEdit._DateTime.CellAttributes)>
<span id="el_AuditTrail__DateTime">
<input type="@(auditTrailEdit._DateTime.InputTextType)" name="x__DateTime" id="x__DateTime" data-table="AuditTrail" data-field="x__DateTime" value="@Html.Raw(auditTrailEdit._DateTime.EditValue)" placeholder="@Html.Raw(HtmlEncode(auditTrailEdit._DateTime.PlaceHolder))" data-format-pattern="@(auditTrailEdit._DateTime.FormatPattern)"@Html.Raw(auditTrailEdit._DateTime.EditAttributes) aria-describedby="x__DateTime_help">
@Html.Raw(auditTrailEdit._DateTime.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(auditTrailEdit._DateTime.GetErrorMessage())</div>
@if (!auditTrailEdit._DateTime.ReadOnly && !auditTrailEdit._DateTime.Disabled && !auditTrailEdit._DateTime.EditAttrs.Is("readonly") && !auditTrailEdit._DateTime.EditAttrs.Is("disabled")) {
<script>
loadjs.ready(["fAuditTrailedit", "datetimepicker"], function () {
    let format = "@Html.Raw(DateFormat(0))", // DN
        options = {
                localization: {
                    locale: ew.LANGUAGE_ID + "-u-nu-" + ew.getNumberingSystem(),
                    hourCycle: format.match(/H/) ? "h24" : "h12",
                    format,
                    ...ew.language.phrase("datetimepicker")
                },
                display: {
                    icons: {
                        previous: ew.IS_RTL ? "fa-solid fa-chevron-right" : "fa-solid fa-chevron-left",
                        next: ew.IS_RTL ? "fa-solid fa-chevron-left" : "fa-solid fa-chevron-right"
                    },
                    components: {
                        hours: !!format.match(/h/i),
                        minutes: !!format.match(/m/),
                        seconds: !!format.match(/s/i)
                    },
                    theme: ew.isDark() ? "dark" : "auto"
                }
            };
    ew.createDateTimePicker("fAuditTrailedit", "x__DateTime", ew.deepAssign({"useCurrent":false,"display":{"sideBySide":false}}, options));
});
</script>
}
</span>
</div></div>
    </div>
} @* auditTrailEdit._DateTime.Visible (end) *@
@if (auditTrailEdit.Script.Visible) { // auditTrailEdit.Script.Visible (begin)
    <div id="r_Script" @Html.Raw(auditTrailEdit.Script.RowAttributes)>
        <label id="elh_AuditTrail_Script" for="x_Script" class="@(auditTrailEdit.LeftColumnClass)">@Html.Raw(auditTrailEdit.Script.Caption)@Html.Raw(auditTrailEdit.Script.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(auditTrailEdit.RightColumnClass)"><div @Html.Raw(auditTrailEdit.Script.CellAttributes)>
<span id="el_AuditTrail_Script">
<input type="@(auditTrailEdit.Script.InputTextType)" name="x_Script" id="x_Script" data-table="AuditTrail" data-field="x_Script" value="@Html.Raw(auditTrailEdit.Script.EditValue)" size="30" maxlength="255" placeholder="@Html.Raw(HtmlEncode(auditTrailEdit.Script.PlaceHolder))" data-format-pattern="@(auditTrailEdit.Script.FormatPattern)"@Html.Raw(auditTrailEdit.Script.EditAttributes) aria-describedby="x_Script_help">
@Html.Raw(auditTrailEdit.Script.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(auditTrailEdit.Script.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* auditTrailEdit.Script.Visible (end) *@
@if (auditTrailEdit._User.Visible) { // auditTrailEdit._User.Visible (begin)
    <div id="r__User" @Html.Raw(auditTrailEdit._User.RowAttributes)>
        <label id="elh_AuditTrail__User" for="x__User" class="@(auditTrailEdit.LeftColumnClass)">@Html.Raw(auditTrailEdit._User.Caption)@Html.Raw(auditTrailEdit._User.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(auditTrailEdit.RightColumnClass)"><div @Html.Raw(auditTrailEdit._User.CellAttributes)>
<span id="el_AuditTrail__User">
<input type="@(auditTrailEdit._User.InputTextType)" name="x__User" id="x__User" data-table="AuditTrail" data-field="x__User" value="@Html.Raw(auditTrailEdit._User.EditValue)" size="30" maxlength="255" placeholder="@Html.Raw(HtmlEncode(auditTrailEdit._User.PlaceHolder))" data-format-pattern="@(auditTrailEdit._User.FormatPattern)"@Html.Raw(auditTrailEdit._User.EditAttributes) aria-describedby="x__User_help">
@Html.Raw(auditTrailEdit._User.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(auditTrailEdit._User.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* auditTrailEdit._User.Visible (end) *@
@if (auditTrailEdit._Action.Visible) { // auditTrailEdit._Action.Visible (begin)
    <div id="r__Action" @Html.Raw(auditTrailEdit._Action.RowAttributes)>
        <label id="elh_AuditTrail__Action" for="x__Action" class="@(auditTrailEdit.LeftColumnClass)">@Html.Raw(auditTrailEdit._Action.Caption)@Html.Raw(auditTrailEdit._Action.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(auditTrailEdit.RightColumnClass)"><div @Html.Raw(auditTrailEdit._Action.CellAttributes)>
<span id="el_AuditTrail__Action">
<input type="@(auditTrailEdit._Action.InputTextType)" name="x__Action" id="x__Action" data-table="AuditTrail" data-field="x__Action" value="@Html.Raw(auditTrailEdit._Action.EditValue)" size="30" maxlength="255" placeholder="@Html.Raw(HtmlEncode(auditTrailEdit._Action.PlaceHolder))" data-format-pattern="@(auditTrailEdit._Action.FormatPattern)"@Html.Raw(auditTrailEdit._Action.EditAttributes) aria-describedby="x__Action_help">
@Html.Raw(auditTrailEdit._Action.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(auditTrailEdit._Action.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* auditTrailEdit._Action.Visible (end) *@
@if (auditTrailEdit._Table.Visible) { // auditTrailEdit._Table.Visible (begin)
    <div id="r__Table" @Html.Raw(auditTrailEdit._Table.RowAttributes)>
        <label id="elh_AuditTrail__Table" for="x__Table" class="@(auditTrailEdit.LeftColumnClass)">@Html.Raw(auditTrailEdit._Table.Caption)@Html.Raw(auditTrailEdit._Table.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(auditTrailEdit.RightColumnClass)"><div @Html.Raw(auditTrailEdit._Table.CellAttributes)>
<span id="el_AuditTrail__Table">
<input type="@(auditTrailEdit._Table.InputTextType)" name="x__Table" id="x__Table" data-table="AuditTrail" data-field="x__Table" value="@Html.Raw(auditTrailEdit._Table.EditValue)" size="30" maxlength="255" placeholder="@Html.Raw(HtmlEncode(auditTrailEdit._Table.PlaceHolder))" data-format-pattern="@(auditTrailEdit._Table.FormatPattern)"@Html.Raw(auditTrailEdit._Table.EditAttributes) aria-describedby="x__Table_help">
@Html.Raw(auditTrailEdit._Table.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(auditTrailEdit._Table.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* auditTrailEdit._Table.Visible (end) *@
@if (auditTrailEdit._Field.Visible) { // auditTrailEdit._Field.Visible (begin)
    <div id="r__Field" @Html.Raw(auditTrailEdit._Field.RowAttributes)>
        <label id="elh_AuditTrail__Field" for="x__Field" class="@(auditTrailEdit.LeftColumnClass)">@Html.Raw(auditTrailEdit._Field.Caption)@Html.Raw(auditTrailEdit._Field.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(auditTrailEdit.RightColumnClass)"><div @Html.Raw(auditTrailEdit._Field.CellAttributes)>
<span id="el_AuditTrail__Field">
<input type="@(auditTrailEdit._Field.InputTextType)" name="x__Field" id="x__Field" data-table="AuditTrail" data-field="x__Field" value="@Html.Raw(auditTrailEdit._Field.EditValue)" size="30" maxlength="255" placeholder="@Html.Raw(HtmlEncode(auditTrailEdit._Field.PlaceHolder))" data-format-pattern="@(auditTrailEdit._Field.FormatPattern)"@Html.Raw(auditTrailEdit._Field.EditAttributes) aria-describedby="x__Field_help">
@Html.Raw(auditTrailEdit._Field.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(auditTrailEdit._Field.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* auditTrailEdit._Field.Visible (end) *@
@if (auditTrailEdit.KeyValue.Visible) { // auditTrailEdit.KeyValue.Visible (begin)
    <div id="r_KeyValue" @Html.Raw(auditTrailEdit.KeyValue.RowAttributes)>
        <label id="elh_AuditTrail_KeyValue" for="x_KeyValue" class="@(auditTrailEdit.LeftColumnClass)">@Html.Raw(auditTrailEdit.KeyValue.Caption)@Html.Raw(auditTrailEdit.KeyValue.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(auditTrailEdit.RightColumnClass)"><div @Html.Raw(auditTrailEdit.KeyValue.CellAttributes)>
<span id="el_AuditTrail_KeyValue">
<textarea data-table="AuditTrail" data-field="x_KeyValue" name="x_KeyValue" id="x_KeyValue" cols="35" rows="4" placeholder="@Html.Raw(HtmlEncode(auditTrailEdit.KeyValue.PlaceHolder))"@Html.Raw(auditTrailEdit.KeyValue.EditAttributes) aria-describedby="x_KeyValue_help">@(auditTrailEdit.KeyValue.EditValue)</textarea>
@Html.Raw(auditTrailEdit.KeyValue.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(auditTrailEdit.KeyValue.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* auditTrailEdit.KeyValue.Visible (end) *@
@if (auditTrailEdit.OldValue.Visible) { // auditTrailEdit.OldValue.Visible (begin)
    <div id="r_OldValue" @Html.Raw(auditTrailEdit.OldValue.RowAttributes)>
        <label id="elh_AuditTrail_OldValue" for="x_OldValue" class="@(auditTrailEdit.LeftColumnClass)">@Html.Raw(auditTrailEdit.OldValue.Caption)@Html.Raw(auditTrailEdit.OldValue.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(auditTrailEdit.RightColumnClass)"><div @Html.Raw(auditTrailEdit.OldValue.CellAttributes)>
<span id="el_AuditTrail_OldValue">
<textarea data-table="AuditTrail" data-field="x_OldValue" name="x_OldValue" id="x_OldValue" cols="35" rows="4" placeholder="@Html.Raw(HtmlEncode(auditTrailEdit.OldValue.PlaceHolder))"@Html.Raw(auditTrailEdit.OldValue.EditAttributes) aria-describedby="x_OldValue_help">@(auditTrailEdit.OldValue.EditValue)</textarea>
@Html.Raw(auditTrailEdit.OldValue.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(auditTrailEdit.OldValue.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* auditTrailEdit.OldValue.Visible (end) *@
@if (auditTrailEdit.NewValue.Visible) { // auditTrailEdit.NewValue.Visible (begin)
    <div id="r_NewValue" @Html.Raw(auditTrailEdit.NewValue.RowAttributes)>
        <label id="elh_AuditTrail_NewValue" for="x_NewValue" class="@(auditTrailEdit.LeftColumnClass)">@Html.Raw(auditTrailEdit.NewValue.Caption)@Html.Raw(auditTrailEdit.NewValue.Required ? Language.Phrase("FieldRequiredIndicator") : "")</label>
        <div class="@(auditTrailEdit.RightColumnClass)"><div @Html.Raw(auditTrailEdit.NewValue.CellAttributes)>
<span id="el_AuditTrail_NewValue">
<textarea data-table="AuditTrail" data-field="x_NewValue" name="x_NewValue" id="x_NewValue" cols="35" rows="4" placeholder="@Html.Raw(HtmlEncode(auditTrailEdit.NewValue.PlaceHolder))"@Html.Raw(auditTrailEdit.NewValue.EditAttributes) aria-describedby="x_NewValue_help">@(auditTrailEdit.NewValue.EditValue)</textarea>
@Html.Raw(auditTrailEdit.NewValue.GetCustomMessage)
<div class="invalid-feedback">@Html.Raw(auditTrailEdit.NewValue.GetErrorMessage())</div>
</span>
</div></div>
    </div>
} @* auditTrailEdit.NewValue.Visible (end) *@
</div><!-- /page* -->
@{ auditTrailEdit.CloseRecordset(); }
@Html.Raw(auditTrailEdit.IsModal ? "<template class=\"ew-modal-buttons\">" : "<div class=\"row ew-buttons\">")<!-- buttons .row -->
    <div class="@(auditTrailEdit.OffsetColumnClass)"><!-- buttons offset -->
    <button class="btn btn-primary ew-btn" name="btn-action" id="btn-action" type="submit" form="fAuditTrailedit">@Html.Raw(Language.Phrase("SaveBtn"))</button>
@if (IsJsonResponse()) {
    <button class="btn btn-default ew-btn" name="btn-cancel" id="btn-cancel" type="button" data-bs-dismiss="modal">@Html.Raw(Language.Phrase("CancelBtn"))</button>
} else {
    <button class="btn btn-default ew-btn" name="btn-cancel" id="btn-cancel" type="button" form="fAuditTrailedit" data-href="@AppPath(auditTrailEdit.ReturnUrl)">@Html.Raw(Language.Phrase("CancelBtn"))</button>
}
    </div><!-- /buttons offset -->
@Html.Raw(auditTrailEdit.IsModal ? "</template>" : "</div>")<!-- /buttons .row -->
</form>
@if (!auditTrailEdit.IsModal) {
<div><!-- DN -->
@auditTrailEdit.Pager.Render()
</div>
}
</main>
@auditTrailEdit.ShowPageFooter()
@Html.Raw(GetDebugMessage())
@ElapsedTime()
<script>
// Field event handlers
loadjs.ready("head", function() {
    ew.addEventHandlers("AuditTrail");
});
</script>
<script>
loadjs.ready("load", function() {
    // Write your table-specific startup script here
    // document.write("page loaded");
});
</script>
