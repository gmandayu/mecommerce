@{
    // View
    View = this;

    // Check action result
    if (countriesDelete.ActionResult is EmptyResult) { // Terminate page
        return;
    }

    // Layout
    if (!countriesDelete.UseLayout) // UseLayout = false // DN
        Layout = "";
    else
        Layout = "_Layout";

    // Local variables (Temp data)
    #pragma warning disable 168
    string? sqlWrk, filterWrk, whereWrk, curVal, dispVal;
    List<Dictionary<string, object>>? rswrk;
    string[]? arWrk;
    List<object?>? listWrk;
    object? guidWrk;
    Func<string>? lookupFilter;
    #pragma warning restore 168
}
<script>
var currentTable = @Html.Raw(ConvertToJson(countriesDelete.ToClientVar()));
ew.deepAssign(ew.vars, { tables: { Countries: currentTable } });
var currentPageID = ew.PAGE_ID = "delete";
var currentForm;
var fCountriesdelete;
loadjs.ready(["wrapper", "head"], function () {
    let $ = jQuery;
    let fields = currentTable.fields;

    // Form object
    let form = new ew.FormBuilder()
        .setId("fCountriesdelete")
        .setPageId("delete")
        .build();
    window[form.id] = form;
    currentForm = form;
    loadjs.done(form.id);
});
</script>
<script>
loadjs.ready("head", function() {
    // Write your client script here, no need to add script tags.
});
</script>
@countriesDelete.ShowPageHeader()
@countriesDelete.ShowMessages()
<form name="fCountriesdelete" id="fCountriesdelete" class="ew-form ew-delete-form" action="@AppPath(CurrentPageName())" method="post" novalidate autocomplete="off">
@if (CurrentPage.CheckToken) {
    <input type="hidden" name="@Config.TokenNameKey" value="@Config.TokenName"><!-- CSRF token name -->
    @Html.AntiForgeryToken()
}
<input type="hidden" name="action" id="action" value="delete">
@foreach (string key in countriesDelete.RecordKeys) {
<input type="hidden" name="key_m[]" value="@key">
}
<div class="card ew-card ew-grid @(countriesDelete.TableGridClass)">
<div class="card-body ew-grid-middle-panel @(countriesDelete.TableContainerClass)" style="@(countriesDelete.TableContainerStyle)">
<table class="@(countriesDelete.TableClass)">
    <thead>
    <tr class="ew-table-header">
@if (countriesDelete.ISO.Visible) { // countriesDelete.ISO.Visible (begin)
        <th class="@Html.Raw(countriesDelete.ISO.HeaderCellClass)"><span id="elh_Countries_ISO" class="Countries_ISO">@Html.Raw(countriesDelete.ISO.Caption)</span></th>
} @* countriesDelete.ISO.Visible (end) *@
@if (countriesDelete._Name.Visible) { // countriesDelete._Name.Visible (begin)
        <th class="@Html.Raw(countriesDelete._Name.HeaderCellClass)"><span id="elh_Countries__Name" class="Countries__Name">@Html.Raw(countriesDelete._Name.Caption)</span></th>
} @* countriesDelete._Name.Visible (end) *@
@if (countriesDelete.NiceName.Visible) { // countriesDelete.NiceName.Visible (begin)
        <th class="@Html.Raw(countriesDelete.NiceName.HeaderCellClass)"><span id="elh_Countries_NiceName" class="Countries_NiceName">@Html.Raw(countriesDelete.NiceName.Caption)</span></th>
} @* countriesDelete.NiceName.Visible (end) *@
@if (countriesDelete.ISO3.Visible) { // countriesDelete.ISO3.Visible (begin)
        <th class="@Html.Raw(countriesDelete.ISO3.HeaderCellClass)"><span id="elh_Countries_ISO3" class="Countries_ISO3">@Html.Raw(countriesDelete.ISO3.Caption)</span></th>
} @* countriesDelete.ISO3.Visible (end) *@
@if (countriesDelete.NumCode.Visible) { // countriesDelete.NumCode.Visible (begin)
        <th class="@Html.Raw(countriesDelete.NumCode.HeaderCellClass)"><span id="elh_Countries_NumCode" class="Countries_NumCode">@Html.Raw(countriesDelete.NumCode.Caption)</span></th>
} @* countriesDelete.NumCode.Visible (end) *@
@if (countriesDelete.PhoneCode.Visible) { // countriesDelete.PhoneCode.Visible (begin)
        <th class="@Html.Raw(countriesDelete.PhoneCode.HeaderCellClass)"><span id="elh_Countries_PhoneCode" class="Countries_PhoneCode">@Html.Raw(countriesDelete.PhoneCode.Caption)</span></th>
} @* countriesDelete.PhoneCode.Visible (end) *@
@if (countriesDelete.CreatedBy.Visible) { // countriesDelete.CreatedBy.Visible (begin)
        <th class="@Html.Raw(countriesDelete.CreatedBy.HeaderCellClass)"><span id="elh_Countries_CreatedBy" class="Countries_CreatedBy">@Html.Raw(countriesDelete.CreatedBy.Caption)</span></th>
} @* countriesDelete.CreatedBy.Visible (end) *@
@if (countriesDelete.CreatedDateTime.Visible) { // countriesDelete.CreatedDateTime.Visible (begin)
        <th class="@Html.Raw(countriesDelete.CreatedDateTime.HeaderCellClass)"><span id="elh_Countries_CreatedDateTime" class="Countries_CreatedDateTime">@Html.Raw(countriesDelete.CreatedDateTime.Caption)</span></th>
} @* countriesDelete.CreatedDateTime.Visible (end) *@
@if (countriesDelete.UpdatedBy.Visible) { // countriesDelete.UpdatedBy.Visible (begin)
        <th class="@Html.Raw(countriesDelete.UpdatedBy.HeaderCellClass)"><span id="elh_Countries_UpdatedBy" class="Countries_UpdatedBy">@Html.Raw(countriesDelete.UpdatedBy.Caption)</span></th>
} @* countriesDelete.UpdatedBy.Visible (end) *@
@if (countriesDelete.UpdatedDateTime.Visible) { // countriesDelete.UpdatedDateTime.Visible (begin)
        <th class="@Html.Raw(countriesDelete.UpdatedDateTime.HeaderCellClass)"><span id="elh_Countries_UpdatedDateTime" class="Countries_UpdatedDateTime">@Html.Raw(countriesDelete.UpdatedDateTime.Caption)</span></th>
} @* countriesDelete.UpdatedDateTime.Visible (end) *@
    </tr>
    </thead>
    <tbody>
@{ countriesDelete.RecordCount = 0; }
@while (countriesDelete.Recordset != null && await countriesDelete.Recordset.ReadAsync()) { // DN
    countriesDelete.RecordCount++;
    countriesDelete.RowCount++;

    // Set row properties
    countriesDelete.ResetAttributes();
    countriesDelete.RowType = RowType.View; // View

    // Get the field contents
    await countriesDelete.LoadRowValues(countriesDelete.Recordset);

    // Render row
    await countriesDelete.RenderRow();
    <tr @Html.Raw(countriesDelete.RowAttributes)>
@if (countriesDelete.ISO.Visible) { // countriesDelete.ISO.Visible (begin)
        <td @Html.Raw(countriesDelete.ISO.CellAttributes)>
<span id="">
<span @Html.Raw(countriesDelete.ISO.ViewAttributes)>
@Html.Raw(countriesDelete.ISO.GetViewValue())</span>
</span></td>
} @* countriesDelete.ISO.Visible (end) *@
@if (countriesDelete._Name.Visible) { // countriesDelete._Name.Visible (begin)
        <td @Html.Raw(countriesDelete._Name.CellAttributes)>
<span id="">
<span @Html.Raw(countriesDelete._Name.ViewAttributes)>
@Html.Raw(countriesDelete._Name.GetViewValue())</span>
</span></td>
} @* countriesDelete._Name.Visible (end) *@
@if (countriesDelete.NiceName.Visible) { // countriesDelete.NiceName.Visible (begin)
        <td @Html.Raw(countriesDelete.NiceName.CellAttributes)>
<span id="">
<span @Html.Raw(countriesDelete.NiceName.ViewAttributes)>
@Html.Raw(countriesDelete.NiceName.GetViewValue())</span>
</span></td>
} @* countriesDelete.NiceName.Visible (end) *@
@if (countriesDelete.ISO3.Visible) { // countriesDelete.ISO3.Visible (begin)
        <td @Html.Raw(countriesDelete.ISO3.CellAttributes)>
<span id="">
<span @Html.Raw(countriesDelete.ISO3.ViewAttributes)>
@Html.Raw(countriesDelete.ISO3.GetViewValue())</span>
</span></td>
} @* countriesDelete.ISO3.Visible (end) *@
@if (countriesDelete.NumCode.Visible) { // countriesDelete.NumCode.Visible (begin)
        <td @Html.Raw(countriesDelete.NumCode.CellAttributes)>
<span id="">
<span @Html.Raw(countriesDelete.NumCode.ViewAttributes)>
@Html.Raw(countriesDelete.NumCode.GetViewValue())</span>
</span></td>
} @* countriesDelete.NumCode.Visible (end) *@
@if (countriesDelete.PhoneCode.Visible) { // countriesDelete.PhoneCode.Visible (begin)
        <td @Html.Raw(countriesDelete.PhoneCode.CellAttributes)>
<span id="">
<span @Html.Raw(countriesDelete.PhoneCode.ViewAttributes)>
@Html.Raw(countriesDelete.PhoneCode.GetViewValue())</span>
</span></td>
} @* countriesDelete.PhoneCode.Visible (end) *@
@if (countriesDelete.CreatedBy.Visible) { // countriesDelete.CreatedBy.Visible (begin)
        <td @Html.Raw(countriesDelete.CreatedBy.CellAttributes)>
<span id="">
<span @Html.Raw(countriesDelete.CreatedBy.ViewAttributes)>
@Html.Raw(countriesDelete.CreatedBy.GetViewValue())</span>
</span></td>
} @* countriesDelete.CreatedBy.Visible (end) *@
@if (countriesDelete.CreatedDateTime.Visible) { // countriesDelete.CreatedDateTime.Visible (begin)
        <td @Html.Raw(countriesDelete.CreatedDateTime.CellAttributes)>
<span id="">
<span @Html.Raw(countriesDelete.CreatedDateTime.ViewAttributes)>
@Html.Raw(countriesDelete.CreatedDateTime.GetViewValue())</span>
</span></td>
} @* countriesDelete.CreatedDateTime.Visible (end) *@
@if (countriesDelete.UpdatedBy.Visible) { // countriesDelete.UpdatedBy.Visible (begin)
        <td @Html.Raw(countriesDelete.UpdatedBy.CellAttributes)>
<span id="">
<span @Html.Raw(countriesDelete.UpdatedBy.ViewAttributes)>
@Html.Raw(countriesDelete.UpdatedBy.GetViewValue())</span>
</span></td>
} @* countriesDelete.UpdatedBy.Visible (end) *@
@if (countriesDelete.UpdatedDateTime.Visible) { // countriesDelete.UpdatedDateTime.Visible (begin)
        <td @Html.Raw(countriesDelete.UpdatedDateTime.CellAttributes)>
<span id="">
<span @Html.Raw(countriesDelete.UpdatedDateTime.ViewAttributes)>
@Html.Raw(countriesDelete.UpdatedDateTime.GetViewValue())</span>
</span></td>
} @* countriesDelete.UpdatedDateTime.Visible (end) *@
    </tr>
}
@{ countriesDelete.CloseRecordset(); }
</tbody>
</table>
</div>
</div>
<div class="ew-buttons ew-desktop-buttons">
<button class="btn btn-primary ew-btn" name="btn-action" id="btn-action" type="submit">@Html.Raw(Language.Phrase("DeleteBtn"))</button>
<button class="btn btn-default ew-btn" name="btn-cancel" id="btn-cancel" type="button" data-href="@AppPath(countriesDelete.ReturnUrl)">@Html.Raw(Language.Phrase("CancelBtn"))</button>
</div>
</form>
@countriesDelete.ShowPageFooter()
@Html.Raw(GetDebugMessage())
@ElapsedTime()
<script>
loadjs.ready("load", function() {
    // Write your table-specific startup script here
    // document.write("page loaded");
});
</script>
